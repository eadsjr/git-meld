#!/bin/bash
# This command hides a branch, so that it does not display with the `git branch` command

# Exit codes
EX_USAGE=3
EX_MISSING_TARGET=4
EX_DUPLICATE_HIDDEN=5
EX_UPDATE_REF_FAILED_WITH_EC=6
EX_UPDATE_REF_FAILED_NO_EC=7
EX_DELETE_FAILED=8
EX_DELETE_AND_CLEANUP_FAILED=9

if [ $# -lt 2 ] || [ $# -gt 2] ; then
	>&2 echo "usage: git hide branch-to-hide"
	>&2 echo "This command hides a branch, so that it does not display with the 'git branch' command"
	exit(EX_USAGE)
fi

branch=$1
branchpath=$(git rev-parse --show-toplevel)/.git/refs/heads/$branch
if [ ! test -e $branchpath ] ; then
	>&2 echo "error: branch \"" $branch "\" not found heads"
	exit(EX_MISSING_TARGET)
fi

hiddenpath=$(git rev-parse --show-toplevel)/.git/refs/hidden/$branch
if [ test -e $hiddenpath ] ; then
	>&2 echo "error: there is already a hidden branch with that name!"
	exit(EX_DUPLICATE_HIDDEN)
fi

# copy branch to hidden folder
git update-ref refs/hidden/$branch $branch
if [ $? -ne 0 ] ; then
	>&2 echo "error on update-ref: aborting hide command"
	exit(EX_UPDATE_REF_FAILED_WITH_EC)
fi

if [ ! test -e $hiddenpath ] ; then
	>&2 echo "error: hidden branch ref not found after update-ref, aborting hide command"
	exit(EX_UPDATE_REF_FAILED_NO_EC)
fi

# delete original
git branch -D $branch > /dev/null
if [ $? -ne 0 ] ; then
	>&2 echo "error: failed to delete original reference."
	>&2 echo "aborting hide command. attempting to clean up..."
	rm $hiddenpath
	if [ test -e $hiddenpath ] ; then
		>&2 echo "cleanup failed..."
		exit(EX_DELETE_AND_CLEANUP_FAILED)
	fi
	# also delete all parent folders including hidden if empty
	folders=hidden/$branch
	while [ $(dirname $folders) -ne '.' ] ; do
		folders=$(dirname $folders)
		rmdir $folders > /dev/null 2> /dev/null
		if [ $? -ne 0 ] ; then
			break
		fi
	done
	exit(EX_DELETE_FAILED)
fi
